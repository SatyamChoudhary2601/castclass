{"version":3,"sources":["components/common/FormGroupInput.js","components/Settings/SettingsProfile.js","../node_modules/reactstrap/es/Label.js"],"names":["FormGroupInput","id","label","rest","htmlFor","SettingsProfile","profileinfo","useState","user_f_name","firstName","setFirstName","user_l_name","lastName","setLastName","user_email","email","setEmail","user_phone","phone","setPhone","profile_heading","heading","setHeading","profile_intro","intro","setIntro","handleProfileSettings","e","preventDefault","console","log","url","config","API_URL","$","ajax","type","data","default_user","localStorage","getItem","form_id","success","response","resultType","toast","error","msg","jqXHR","status","err","className","onSubmit","lg","value","onChange","target","disabled","xs","rows","tag","Flex","justify","color","onClick","stringOrNumberProp","PropTypes","oneOfType","number","string","columnProps","bool","shape","size","order","offset","propTypes","children","node","hidden","check","for","tagPropType","cssModule","object","sm","md","xl","widths","array","defaultProps","getColumnSizeClass","isXs","colWidth","colSize","Label","props","Tag","attributes","_objectWithoutPropertiesLoose","colClasses","forEach","i","columnProp","colClass","isObject","_classNames","colSizeInterfix","push","mapToCssModules","classNames","classes","length","React","createElement","_extends"],"mappings":"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","file":"static/js/17.1f503107.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FormGroup, Input, Label } from 'reactstrap';\r\n\r\nconst FormGroupInput = ({ id, label, ...rest }) => (\r\n  <FormGroup>\r\n    <Label htmlFor={id}>{label}</Label>\r\n    <Input id={id} {...rest} />\r\n  </FormGroup>\r\n);\r\n\r\nFormGroupInput.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  ...Input.propTypes\r\n};\r\n\r\nexport default FormGroupInput;\r\n","import React, { useState } from 'react';\r\nimport { Button, Card, CardBody, Col, Form, Row } from 'reactstrap';\r\nimport FalconCardHeader from '../common/FalconCardHeader';\r\nimport FormGroupInput from '../common/FormGroupInput';\r\nimport Flex from '../common/Flex';\r\nimport $ from 'jquery';\r\nimport config from './../../helpers/config';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst SettingsProfile = ({profileinfo}) => {\r\n  const [firstName, setFirstName] = useState(profileinfo?.user_f_name);\r\n  const [lastName, setLastName] = useState(profileinfo?.user_l_name);\r\n  const [email, setEmail] = useState(profileinfo?.user_email);\r\n  const [phone, setPhone] = useState(profileinfo?.user_phone);\r\n  const [heading, setHeading] = useState(profileinfo?.profile_heading);\r\n  const [intro, setIntro] = useState(profileinfo?.profile_intro);\r\n\r\n  const handleProfileSettings = e => {\r\n    e.preventDefault();\r\n    console.log({ firstName, lastName, email, phone, heading, intro });\r\n    let url = config.API_URL()+'post/updateuserinfo';\r\n\r\n    $.ajax({\r\n        url: url,\r\n        type: 'POST',       \r\n        data: {\r\n          default_user:localStorage.getItem('default_user'),\r\n          user_f_name:firstName,\r\n          user_l_name:lastName,\r\n          user_phone:phone,\r\n          profile_heading:heading,\r\n          profile_intro:intro,\r\n          form_id:\"user_name\"\r\n        },\r\n        success: function(response) {\r\n          if(response.resultType=='F'){\r\n              toast.error(response.msg);\r\n          }else{\r\n              toast.success(response.msg);\r\n          }\r\n        },error: function (jqXHR, status, err) {\r\n              toast.success('There is some error, try again');\r\n        }\r\n    })\r\n  };\r\n    \r\n\r\n  return (\r\n    // <Card className=\"mb-3\">\r\n    //   <FalconCardHeader title=\"Profile Settings\" light={false} />\r\n      <CardBody className=\"bg-light\">\r\n        <Form onSubmit={handleProfileSettings}>\r\n          <Row>\r\n            <Col lg={6}>\r\n              <FormGroupInput\r\n                id=\"first-name\"\r\n                label=\"First Name\"\r\n                value={firstName}\r\n                onChange={({ target }) => setFirstName(target.value)}\r\n              />\r\n            </Col>\r\n            <Col lg={6}>\r\n              <FormGroupInput\r\n                id=\"last-name\"\r\n                label=\"First Name\"\r\n                value={lastName}\r\n                onChange={({ target }) => setLastName(target.value)}\r\n              />\r\n            </Col>\r\n            <Col lg={6}>\r\n              <FormGroupInput disabled\r\n                id=\"email\"\r\n                label=\"Email\"\r\n                value={email}\r\n                onChange={({ target }) => setEmail(target.value)}\r\n                type=\"email\"\r\n              />\r\n            </Col>\r\n            <Col lg={6}>\r\n              <FormGroupInput\r\n                id=\"phone\"\r\n                label=\"Phone\"\r\n                value={phone}\r\n                onChange={({ target }) => setPhone(target.value)}\r\n                type=\"tel\"\r\n              />\r\n            </Col>\r\n            <Col xs={12}>\r\n              <FormGroupInput\r\n                id=\"heading\"\r\n                label=\"Heading\"\r\n                value={heading}\r\n                onChange={({ target }) => setHeading(target.value)}\r\n              />\r\n            </Col>\r\n            <Col xs={12}>\r\n              <FormGroupInput\r\n                id=\"intro\"\r\n                label=\"Intro\"\r\n                value={intro}\r\n                onChange={({ target }) => setIntro(target.value)}\r\n                type=\"textarea\"\r\n                rows=\"13\"\r\n              />\r\n            </Col>\r\n            <Col tag={Flex} xs={12} justify=\"end\">\r\n              <Button color=\"primary\" type=\"submit\" onClick={handleProfileSettings}>\r\n                Update\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </CardBody>\r\n    // </Card>\r\n  );\r\n};\r\n\r\nexport default SettingsProfile;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.string, PropTypes.number, PropTypes.shape({\n  size: stringOrNumberProp,\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  children: PropTypes.node,\n  hidden: PropTypes.bool,\n  check: PropTypes.bool,\n  size: PropTypes.string,\n  for: PropTypes.string,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'label',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Label = function Label(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      hidden = props.hidden,\n      widths = props.widths,\n      Tag = props.tag,\n      check = props.check,\n      size = props.size,\n      htmlFor = props.for,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"hidden\", \"widths\", \"tag\", \"check\", \"size\", \"for\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n    var colClass;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames))), cssModule);\n    } else {\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(colClass);\n    }\n  });\n  var classes = mapToCssModules(classNames(className, hidden ? 'sr-only' : false, check ? 'form-check-label' : false, size ? \"col-form-label-\" + size : false, colClasses, colClasses.length ? 'col-form-label' : false), cssModule);\n  return React.createElement(Tag, _extends({\n    htmlFor: htmlFor\n  }, attributes, {\n    className: classes\n  }));\n};\n\nLabel.propTypes = propTypes;\nLabel.defaultProps = defaultProps;\nexport default Label;"],"sourceRoot":""}